# Copyright (C) 2022 Rochus Keller (me@rochus-keller.ch) for LeanQt
# licensed under GPL/LGPL

let err : Message {
	.text = "uic can only be built if HAVE_FILEIO and HAVE_COREAPP are set"
}

let exe * : Executable {
	.name = "uic"
	.sources += [
		./cppextractimages.cpp            ./cppwriteincludes.cpp        ./main.cpp
		./cppwritedeclaration.cpp         ./cppwriteinitialization.cpp  ./treewalker.cpp
		./cppwriteicondata.cpp            ./customwidgetsinfo.cpp       ./ui4.cpp
		./cppwriteicondeclaration.cpp     ./databaseinfo.cpp            ./uic.cpp
		./cppwriteiconinitialization.cpp  ./driver.cpp                  ./validator.cpp
	]
	if ^HAVE_OBJECT || (^HAVE_SHARED && ( target_toolchain == `msvc )) {
		# use this with OBJECT because otherwise we have issues with missing moced objects
		.deps += ^bootstrap.sources;
		.configs += [ ^bootstrap.config ^_core_linker_config ]
		.sources += [
			../../core/qxmlstream.cpp ../../core/qxmlutils.cpp
		]
	}else{
		.deps += ^_core_sources;
		.configs += ^core_client_config
		if !^HAVE_FILEIO || !^HAVE_COREAPP {
			.deps += err
		}
		if !^HAVE_XMLSTREAM {
			.sources += [
				../../core/qxmlstream.cpp ../../core/qxmlutils.cpp
			]
		}
		if !^HAVE_CMDLINE {
			.sources += [
				../../core/qcommandlineoption.cpp ../../core/qcommandlineparser.cpp
			]
		}
	}
	.defines += "QT_FORCE_XMLSTREAM"
	.include_dirs += .
	# TODO: do we need this? uic_path = build_dir()
}
